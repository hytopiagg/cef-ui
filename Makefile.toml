# This is a better name.
[config]
additional_profiles = ["release"]

# ----------------------------
# Setup environment variables.
# ----------------------------

[env]
PROJECT_DIR = "${CARGO_MAKE_WORKING_DIRECTORY}"
ARTIFACTS_DIR = "${PROJECT_DIR}/artifacts"

[env.development]
TARGET_DIR = "target/debug"

[env.release]
TARGET_DIR = "target/release"

# ------------------------
# This cleans the project.
# ------------------------

[tasks.clean]
clear = true
workspace = false
dependencies = [
    "cargo-clean",
    "remove-artifacts"
]

[tasks.cargo-clean]
private = true
workspace = false
script = '''
    cargo clean
'''

[tasks.remove-artifacts]
private = true
workspace = false
script = '''
    rm -rf artifacts
'''

# ------------------------
# This builds the project.
# ------------------------

# Builds the project.
[tasks.build]
clear = true
workspace = false
dependencies = [
    "build-debug",
    "build-release",
    "build-macos-app"
]

[tasks.build-debug]
clear = true
private = true
workspace = false
condition = { profiles = ["development"] }
script = '''
    cargo build
'''

[tasks.build-release]
clear = true
private = true
workspace = false
condition = { profiles = ["release"] }
script = '''
    cargo build --release
'''

[tasks.build-macos-app]
private = true
workspace = false
condition = { platforms = ["mac"] }
env = { "APP_NAME" = "cef-ui", "RES_DIR" = "resources/macos" }
script = '''
    APP_DIR="${TARGET_DIR}/${APP_NAME}.app"

    # Remove any existing app.
    rm -fr "${APP_DIR}"

    # Create the directory structure.
    mkdir -p "${APP_DIR}/Contents/MacOS"
    mkdir -p "${APP_DIR}/Contents/Resources"
    mkdir -p "${APP_DIR}/Contents/Frameworks/${APP_NAME} Helper.app/Contents/MacOS"

    # Copy the framework.
    cp -r "${ARTIFACTS_DIR}/cef/Chromium Embedded Framework.framework" "${APP_DIR}/Contents/Frameworks"

    # Copy resources.
    cp -r "${RES_DIR}/Info.plist" "${APP_DIR}/Contents"
    cp -r "${RES_DIR}/Icon.icns" "${APP_DIR}/Contents/Resources"
    cp -r "${RES_DIR}/HelperInfo.plist" "${APP_DIR}/Contents/Frameworks/${APP_NAME} Helper.app/Contents/Info.plist"
'''

# ----------------------
# This runs the project.
# ----------------------

# Builds the project.
[tasks.run]
clear = true
workspace = false
dependencies = [
    "run-debug",
    "run-release"
]

[tasks.run-debug]
clear = true
private = true
workspace = false
condition = { profiles = ["development"] }
script = '''
    cargo run
'''

[tasks.run-release]
clear = true
private = true
workspace = false
condition = { profiles = ["release"] }
script = '''
    cargo run --release
'''
